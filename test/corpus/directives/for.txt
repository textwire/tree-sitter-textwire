==================
@for without any block
==================
@for(i = 0; true; i++)@end
---

(program 
    (for_statement
        init: (assign_statement
            name: (identifier)
            value: (integer_literal))
        condition: (boolean_literal)
        post: (postfix_increment
            left: (identifier))))

==================
@for with HTML block
==================
@for(i = 0; true; i++)
    <span>Nice</span>
@end
---

(program 
    (for_statement
        init: (assign_statement
            name: (identifier)
            value: (integer_literal))
        condition: (boolean_literal)
        post: (postfix_increment
            left: (identifier))
        block: (control_flow_block_statement
            (text))))

==================
@for with out HTML block
==================
@for(i = 0; i < 10; i++)@end
---

(program 
    (for_statement
        init: (assign_statement
            name: (identifier)
            value: (integer_literal))
        condition: (infix_expression
            (less
                left: (identifier)
                right: (integer_literal)))
        post: (postfix_increment
            left: (identifier))))

==================
@for with @break
==================
@for(i = 0; i < 10; i++)
    @break
    <span>nice</span>
@end
---

(program 
    (for_statement
        init: (assign_statement
            name: (identifier)
            value: (integer_literal))
        condition: (infix_expression
            (less
                left: (identifier)
                right: (integer_literal)))
        post: (postfix_increment
            left: (identifier))
        block: (control_flow_block_statement
            (text)
            (break_statement)
            (text))))

==================
@for with @break and @continue inside of HTML
==================
<div>
    @for(i = 0; i < 10; i++)
        @break
        @continue
    @end
</div>
---

(program 
    (text)
    (for_statement
        init: (assign_statement
            name: (identifier)
            value: (integer_literal))
        condition: (infix_expression
            (less
                left: (identifier)
                right: (integer_literal)))
        post: (postfix_increment
            left: (identifier))
        block: (control_flow_block_statement
            (text)
            (break_statement)
            (text)
            (continue_statement)
            (text)))
    (text))

